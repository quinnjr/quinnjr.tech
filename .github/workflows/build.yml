name: Build CI

on:
  push:
    branches: [release/*]

jobs:
  build_frontend:
    runs-on: ubuntu-latest
    environment: staging
    env:
      API_ENTRYPOINT: ${{ secrets.API_ENTRYPOINT }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN}}

      - id: docker_build
        name: Build and push Docker images
        uses: docker/build-push-action@v2.4.0
        with:
          context: ./frontend
          push: true
          tags: quinnjr/quinnjrtech_frontend:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build_backend:
    runs-on: ubuntu-latest
    environment: staging
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      SETUP_PASSWORD: ${{ secrets.SETUP_PASSWORD }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN}}

      - id: docker_build
        name: Build and push Docker images
        uses: docker/build-push-action@v2.4.0
        with:
          context: ./backend
          push: true
          tags: quinnjr/quinnjrtech_backend:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
