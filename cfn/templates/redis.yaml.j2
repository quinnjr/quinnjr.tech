Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  PrivateSubnetA:
    Type: AWS::EC2::Subnet::Id
Resources:
  MyElastiCacheSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Redis ElastiCache Subnet Group
      SubnetIds:
        - !Ref PrivateSubnetA
  MyElastiCacheCluster:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      AutoMinorVersionUpgrade: true
      AZMode: single-az
      CacheNodeType: cache.t4g.micro
      CacheSubnetGroupName: !Ref MyElastiCacheSubnetGroup
      Engine: redis
      IpDiscovery: ipv4
      NetworkType: ipv4
      NumCacheNodes: 1
      Port: 6379
      VpcSecurityGroupIds:
        - !Ref MyElastiCacheSecurityGroup
  MyElastiCacheSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Redis Security Group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
      SecurityGroupIngress:
        - CidrIp: 10.0.1.0/24
          ToPort: 6379
          FromPort: 6379
          IpProtocol: -1
      VpcId: !Ref VpcId
Outputs:
  RedisHost:
    Value: !GetAtt MyElastiCacheCluster.RedisEndpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}-address"
  RedisPort:
    Value: !GetAtt MyElastiCacheCluster.RedisEndpoint.Port
    Export:
      Name: !Sub "${AWS::StackName}-port"